// Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var controllers, web_interface;

  web_interface = angular.module("web_interface", ["ngTable", "ngCookies"]);

  controllers = {};

  controllers.my_controller = function($scope, $http, $interval, $cookieStore) {
    $scope.init_const_and_vars = function() {
      var term;
      term = {
        on: [],
        off: []
      };
      $scope.search = {};
      $scope.search.terminals = {};
      $scope.search.filters = {};
      $scope.search.stat = {};
      if ($cookieStore.get("opts") === void 0) {
        $scope.opts = {};
        $scope.opts.current_showing_type = "auth";
        $scope.opts.task_cols = [
          {
            field: 'uuid',
            visible: true
          }, {
            field: 'comment',
            visible: true
          }, {
            field: 'ids',
            visible: true
          }, {
            field: 'type',
            visible: true
          }, {
            field: 'override',
            visible: true
          }, {
            field: 'status',
            visible: true
          }
        ];
        $scope.opts.access_token = "";
        $scope.opts.proxy = "";
        $scope.opts.my_uid = 0;
      } else {
        $scope.opts = $cookieStore.get("opts");
      }
      $scope.cached = {};
      return $scope.cached.task_new = {
        comment: "",
        ids: "",
        type: "group",
        override: false
      };
    };
    $scope.send_message = function(mess) {
      return $scope.bullet.send(JSON.stringify(mess));
    };
    $scope.auth = function(token, my_uid, proxy) {
      $cookieStore.put("opts", $scope.opts);
      return $scope.send_message({
        "subject": "auth",
        "content": {
          "token": token,
          "uid": my_uid,
          "proxy": proxy
        }
      });
    };
    return $scope.init = function() {
      $scope.init_const_and_vars();
      $scope.bullet = $.bullet("ws://" + location.host + "/bullet");
      $scope.bullet.onopen = function() {
        return console.log("bullet: connected");
      };
      $scope.bullet.ondisconnect = function() {
        return console.log("bullet: disconnected");
      };
      $scope.bullet.onclose = function() {
        return console.log("bullet: closed");
      };
      $scope.bullet.onmessage = function(e) {
        var mess;
        mess = $.parseJSON(e.data);
        if (mess.subject === "error") {
          return $.growl.error({
            message: mess.content,
            duration: 20000
          });
        } else if (mess.subject === "warn") {
          return $.growl.warning({
            message: mess.content,
            duration: 20000
          });
        } else if (mess.subject === "notice") {
          return $.growl.notice({
            message: mess.content,
            duration: 20000
          });
        } else if (mess.subject === "auth") {
          $scope.opts.current_showing_type = "vk_db";
          return $.growl.notice({
            message: mess.content,
            duration: 20000
          });
        } else if (mess.subject === "pong") {
          return "ok";
        } else {
          return alert("Unexpected message = " + e.data);
        }
      };
      $scope.bullet.onheartbeat = function() {
        return $scope.send_message({
          "subject": "ping",
          "content": "nil"
        });
      };
      return $interval($scope.bullet.onheartbeat, 1000, [], []);
    };
  };

  web_interface.controller(controllers);

}).call(this);
