// Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var controllers, web_interface;

  web_interface = angular.module("web_interface", ["ngTable", "ngCookies"]);

  controllers = {};

  controllers.my_controller = function($scope, $http, $interval, $cookieStore) {
    $scope.foo = function(foo) {
      return $scope.send_message("foo", foo);
    };
    $scope.bar = function(bar) {
      return $scope.send_message("bar", bar);
    };
    $scope.init_const_and_vars = function() {
      $scope.search = {};
      if ($cookieStore.get("opts") === void 0) {
        $scope.opts = {};
        $scope.opts.current_showing_type = "foo";
      } else {
        $scope.opts = $cookieStore.get("opts");
      }
      $scope.cached = {};
      $scope.cached.foo = 0;
      $scope.cached.bar = "hello, world";
      return $scope.cached.foo_list = [];
    };
    $scope.send_message = function(subject, content) {
      return $scope.bullet.send(JSON.stringify({
        "subject": subject,
        "content": content
      }));
    };
    return $scope.init = function() {
      $scope.init_const_and_vars();
      $scope.bullet = $.bullet("ws://" + location.host + "/bullet");
      $scope.bullet.onopen = function() {
        return console.log("bullet: connected");
      };
      $scope.bullet.ondisconnect = function() {
        return console.log("bullet: disconnected");
      };
      $scope.bullet.onclose = function() {
        return console.log("bullet: closed");
      };
      $scope.bullet.onheartbeat = function() {
        return $scope.send_message("ping", "nil");
      };
      $interval($cookieStore.put("opts", $scope.opts), 3000, [], []);
      return $scope.bullet.onmessage = function(e) {
        var content, mess, subject;
        mess = $.parseJSON(e.data);
        subject = mess.subject;
        content = mess.content;
        if (subject === "error") {
          return $.growl.error({
            message: content,
            duration: 20000
          });
        } else if (subject === "warn") {
          return $.growl.warning({
            message: content,
            duration: 20000
          });
        } else if (subject === "notice") {
          return $.growl.notice({
            message: content,
            duration: 20000
          });
        } else if (subject === "pong") {
          return "ok";
        } else if (subject === "foo") {
          return $scope.cached.foo_list.push(content);
        } else {
          return alert("Unexpected message = " + e.data);
        }
      };
    };
  };

  web_interface.controller(controllers);

}).call(this);
